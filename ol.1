.TH OL 1 "Feb 11, 2023"
.SH NAME
ol \- an Otus Lisp, functional dialect of Lisp
.SH SYNOPSIS
.B ol
.I [OPTION...] [FILE [FILE-ARGS]]
.SH DESCRIPTION
Otus Lisp (Ol in short) is a purely functional dialect of Lisp.

Ol implements an extended subset of the R7RS Scheme, including
but not limited to some SRFIs. It is tiny (< 64KB), embeddable
and cross-platform.  Provides a portable, high-level interface
to call code written in another language.

A FILE of "-" denotes standard input. If FILE is not specified, standard input is used.

If FILE is a text script, then FILE-ARGS is passed to FILE as the result of the standard "command-line" function call.
If FILE is a binary (compiled) script, then FILE-ARGS is passed as a list to the last FILE lambda expression.
.PP
This program follows the usual GNU command line syntax, with long
options starting with two dashes (`-').
A summary of essential command line flats options is included below.
.TP
.B \-\-version
Show version of program.
.TP
.B \-\-version=...
Override real program version with different one.
.TP
.B \-\-home=...
Override library searching path.
.TP
.B \-\-sandbox
Goes to sandboxed environment (if applicable).
.TP
.B \-\-interactive
Forces the running mode into interactive one (useful when working remotely over pipe, for example).
.TP
.B \-\-no-interactive
Forces the running mode into non-interactive.
.TP
.B \-\-embed
Special case when running as embedded.
.TP
.B \-\-
End of options. Next argument will be treated as FILE even if its name looks like an option ("--version", for example).
.SH ENVIRONMENT
.TP
.B OL_HOME
Library searching path.
.SH AUTHOR
Yuriy Chumak
.SH COPYRIGHT
(c) 2011-2014 Aki Helin,
(c) 2014-2024 Yuriy Chumak
