type limits checking:
   good char (-128)> [-128 => -128] -128
   good char (127)> [127 => 127] 127
   unsinged char (127)> [127 => 127] 127
   unsinged char (255)> [255 => 255] 255
   short (-32768)> [-32768 => -32768] -32768
   short (32767)> [32767 => 32767] 32767
   unsinged short (32767)> [32767 => 32767] 32767
   unsinged short (65535)> [65535 => 65535] 65535
   int (-2147483648)> [-2147483648 => -2147483648] -2147483648
   int (2147483647)> [2147483647 => 2147483647] 2147483647
   unsinged int (2147483647)> [2147483647 => 2147483647] 2147483647
   unsinged int (4294967295)> [4294967295 => 4294967295] 4294967295
   long long (-9223372036854775808)> [-9223372036854775808 => -9223372036854775808] -9223372036854775808
   long long (9223372036854775807)> [9223372036854775807 => 9223372036854775807] 9223372036854775807
   unsinged long long (9223372036854775807)> [9223372036854775807 => 9223372036854775807] 9223372036854775807
   unsinged long long (18446744073709551615)> [18446744073709551615 => 18446744073709551615] 18446744073709551615
type function(type arg) { return arg; }
   c2c (1)> [1 => 1] 1
   c2c (125)> [125 => 125] 125
   c2c (0)> [0 => 0] 0
   s2s (1)> [1 => 1] 1
   s2s (125)> [125 => 125] 125
   s2s (0)> [0 => 0] 0
   i2i (1)> [1 => 1] 1
   i2i (125)> [125 => 125] 125
   i2i (0)> [0 => 0] 0
   l2l (1)> [1 => 1] 1
   l2l (125)> [125 => 125] 125
   l2l (0)> [0 => 0] 0
   q2q (1)> [1 => 1] 1
   q2q (125)> [125 => 125] 125
   q2q (0)> [0 => 0] 0
   C2C (1)> [1 => 1] 1
   C2C (125)> [125 => 125] 125
   C2C (0)> [0 => 0] 0
   C2C (-125)> [-125 => -125] -125
   C2C (-1)> [-1 => -1] -1
   S2S (1)> [1 => 1] 1
   S2S (125)> [125 => 125] 125
   S2S (0)> [0 => 0] 0
   S2S (-125)> [-125 => -125] -125
   S2S (-1)> [-1 => -1] -1
   I2I (1)> [1 => 1] 1
   I2I (125)> [125 => 125] 125
   I2I (0)> [0 => 0] 0
   I2I (-125)> [-125 => -125] -125
   I2I (-1)> [-1 => -1] -1
   L2L (1)> [1 => 1] 1
   L2L (125)> [125 => 125] 125
   L2L (0)> [0 => 0] 0
   L2L (-125)> [-125 => -125] -125
   L2L (-1)> [-1 => -1] -1
   Q2Q (1)> [1 => 1] 1
   Q2Q (125)> [125 => 125] 125
   Q2Q (0)> [0 => 0] 0
   Q2Q (-125)> [-125 => -125] -125
   Q2Q (-1)> [-1 => -1] -1
   f2f (0)> [0.000000 => 0.000000] 0.0
   f2f (0.0)> [0.000000 => 0.000000] 0.0
   f2f (1001/8)> [125.125000 => 125.125000] 125.125
   f2f (125.125)> [125.125000 => 125.125000] 125.125
   f2f (-1001/8)> [-125.125000 => -125.125000] -125.125
   f2f (-125.125)> [-125.125000 => -125.125000] -125.125
   d2d (0)> [0.000000 => 0.000000] 0.0
   d2d (0.0)> [0.000000 => 0.000000] 0.0
   d2d (1001/8)> [125.125000 => 125.125000] 125.125
   d2d (125.125)> [125.125000 => 125.125000] 125.125
   d2d (-1001/8)> [-125.125000 => -125.125000] -125.125
   d2d (-125.125)> [-125.125000 => -125.125000] -125.125
type function(type* arg) { return *arg; }
   pc2c ((1))> [1 => 1] 1 -> ((1))
   pc2c (#(1))> [1 => 1] 1 -> (#(1))
   pc2c ((125))> [125 => 125] 125 -> ((125))
   pc2c (#(125))> [125 => 125] 125 -> (#(125))
   pc2c ((0))> [0 => 0] 0 -> ((0))
   pc2c (#(0))> [0 => 0] 0 -> (#(0))
   ps2s ((1))> [1 => 1] 1 -> ((1))
   ps2s (#(1))> [1 => 1] 1 -> (#(1))
   ps2s ((125))> [125 => 125] 125 -> ((125))
   ps2s (#(125))> [125 => 125] 125 -> (#(125))
   ps2s ((0))> [0 => 0] 0 -> ((0))
   ps2s (#(0))> [0 => 0] 0 -> (#(0))
   pi2i ((1))> [1 => 1] 1 -> ((1))
   pi2i (#(1))> [1 => 1] 1 -> (#(1))
   pi2i ((125))> [125 => 125] 125 -> ((125))
   pi2i (#(125))> [125 => 125] 125 -> (#(125))
   pi2i ((0))> [0 => 0] 0 -> ((0))
   pi2i (#(0))> [0 => 0] 0 -> (#(0))
   pl2l ((1))> [1 => 1] 1 -> ((1))
   pl2l (#(1))> [1 => 1] 1 -> (#(1))
   pl2l ((125))> [125 => 125] 125 -> ((125))
   pl2l (#(125))> [125 => 125] 125 -> (#(125))
   pl2l ((0))> [0 => 0] 0 -> ((0))
   pl2l (#(0))> [0 => 0] 0 -> (#(0))
   pq2q ((1))> [1 => 1] 1 -> ((1))
   pq2q (#(1))> [1 => 1] 1 -> (#(1))
   pq2q ((125))> [125 => 125] 125 -> ((125))
   pq2q (#(125))> [125 => 125] 125 -> (#(125))
   pq2q ((0))> [0 => 0] 0 -> ((0))
   pq2q (#(0))> [0 => 0] 0 -> (#(0))
   pC2C ((1))> [1 => 1] 1 -> ((1))
   pC2C (#(1))> [1 => 1] 1 -> (#(1))
   pC2C ((125))> [125 => 125] 125 -> ((125))
   pC2C (#(125))> [125 => 125] 125 -> (#(125))
   pC2C ((0))> [0 => 0] 0 -> ((0))
   pC2C (#(0))> [0 => 0] 0 -> (#(0))
   pC2C ((-125))> [-125 => -125] -125 -> ((-125))
   pC2C (#(-125))> [-125 => -125] -125 -> (#(-125))
   pC2C ((-1))> [-1 => -1] -1 -> ((-1))
   pC2C (#(-1))> [-1 => -1] -1 -> (#(-1))
   pS2S ((1))> [1 => 1] 1 -> ((1))
   pS2S (#(1))> [1 => 1] 1 -> (#(1))
   pS2S ((125))> [125 => 125] 125 -> ((125))
   pS2S (#(125))> [125 => 125] 125 -> (#(125))
   pS2S ((0))> [0 => 0] 0 -> ((0))
   pS2S (#(0))> [0 => 0] 0 -> (#(0))
   pS2S ((-125))> [-125 => -125] -125 -> ((-125))
   pS2S (#(-125))> [-125 => -125] -125 -> (#(-125))
   pS2S ((-1))> [-1 => -1] -1 -> ((-1))
   pS2S (#(-1))> [-1 => -1] -1 -> (#(-1))
   pI2I ((1))> [1 => 1] 1 -> ((1))
   pI2I (#(1))> [1 => 1] 1 -> (#(1))
   pI2I ((125))> [125 => 125] 125 -> ((125))
   pI2I (#(125))> [125 => 125] 125 -> (#(125))
   pI2I ((0))> [0 => 0] 0 -> ((0))
   pI2I (#(0))> [0 => 0] 0 -> (#(0))
   pI2I ((-125))> [-125 => -125] -125 -> ((-125))
   pI2I (#(-125))> [-125 => -125] -125 -> (#(-125))
   pI2I ((-1))> [-1 => -1] -1 -> ((-1))
   pI2I (#(-1))> [-1 => -1] -1 -> (#(-1))
   pL2L ((1))> [1 => 1] 1 -> ((1))
   pL2L (#(1))> [1 => 1] 1 -> (#(1))
   pL2L ((125))> [125 => 125] 125 -> ((125))
   pL2L (#(125))> [125 => 125] 125 -> (#(125))
   pL2L ((0))> [0 => 0] 0 -> ((0))
   pL2L (#(0))> [0 => 0] 0 -> (#(0))
   pL2L ((-125))> [-125 => -125] -125 -> ((-125))
   pL2L (#(-125))> [-125 => -125] -125 -> (#(-125))
   pL2L ((-1))> [-1 => -1] -1 -> ((-1))
   pL2L (#(-1))> [-1 => -1] -1 -> (#(-1))
   pQ2Q ((1))> [1 => 1] 1 -> ((1))
   pQ2Q (#(1))> [1 => 1] 1 -> (#(1))
   pQ2Q ((125))> [125 => 125] 125 -> ((125))
   pQ2Q (#(125))> [125 => 125] 125 -> (#(125))
   pQ2Q ((0))> [0 => 0] 0 -> ((0))
   pQ2Q (#(0))> [0 => 0] 0 -> (#(0))
   pQ2Q ((-125))> [-125 => -125] -125 -> ((-125))
   pQ2Q (#(-125))> [-125 => -125] -125 -> (#(-125))
   pQ2Q ((-1))> [-1 => -1] -1 -> ((-1))
   pQ2Q (#(-1))> [-1 => -1] -1 -> (#(-1))
   pf2f ((0))> [0.000000 => 0.000000] 0.0 -> ((0))
   pf2f ((0.0))> [0.000000 => 0.000000] 0.0 -> ((0.0))
   pf2f ((1001/8))> [125.125000 => 125.125000] 125.125 -> ((1001/8))
   pf2f ((125.125))> [125.125000 => 125.125000] 125.125 -> ((125.125))
   pf2f ((-1001/8))> [-125.125000 => -125.125000] -125.125 -> ((-1001/8))
   pf2f ((-125.125))> [-125.125000 => -125.125000] -125.125 -> ((-125.125))
   pd2d ((0))> [0.000000 => 0.000000] 0.0 -> ((0))
   pd2d ((0.0))> [0.000000 => 0.000000] 0.0 -> ((0.0))
   pd2d ((1001/8))> [125.125000 => 125.125000] 125.125 -> ((1001/8))
   pd2d ((125.125))> [125.125000 => 125.125000] 125.125 -> ((125.125))
   pd2d ((-1001/8))> [-125.125000 => -125.125000] -125.125 -> ((-1001/8))
   pd2d ((-125.125))> [-125.125000 => -125.125000] -125.125 -> ((-125.125))
type function(type* arg) { *arg -= 1; return *arg + 2; }
   rc2c ((1))> [1 => 0] 2 -> ((0))
   rc2c (#(1))> [1 => 0] 2 -> (#(0))
   rc2c ((125))> [125 => 124] 126 -> ((124))
   rc2c (#(125))> [125 => 124] 126 -> (#(124))
   rs2s ((1))> [1 => 0] 2 -> ((0))
   rs2s (#(1))> [1 => 0] 2 -> (#(0))
   rs2s ((125))> [125 => 124] 126 -> ((124))
   rs2s (#(125))> [125 => 124] 126 -> (#(124))
   ri2i ((1))> [1 => 0] 2 -> ((0))
   ri2i (#(1))> [1 => 0] 2 -> (#(0))
   ri2i ((125))> [125 => 124] 126 -> ((124))
   ri2i (#(125))> [125 => 124] 126 -> (#(124))
   rl2l ((1))> [1 => 0] 2 -> ((0))
   rl2l (#(1))> [1 => 0] 2 -> (#(0))
   rl2l ((125))> [125 => 124] 126 -> ((124))
   rl2l (#(125))> [125 => 124] 126 -> (#(124))
   rq2q ((1))> [1 => 0] 2 -> ((0))
   rq2q (#(1))> [1 => 0] 2 -> (#(0))
   rq2q ((125))> [125 => 124] 126 -> ((124))
   rq2q (#(125))> [125 => 124] 126 -> (#(124))
   rC2C ((1))> [1 => 0] 2 -> ((0))
   rC2C (#(1))> [1 => 0] 2 -> (#(0))
   rC2C ((125))> [125 => 124] 126 -> ((124))
   rC2C (#(125))> [125 => 124] 126 -> (#(124))
   rC2C ((0))> [0 => -1] 1 -> ((-1))
   rC2C (#(0))> [0 => -1] 1 -> (#(-1))
   rC2C ((-125))> [-125 => -126] -124 -> ((-126))
   rC2C (#(-125))> [-125 => -126] -124 -> (#(-126))
   rC2C ((-1))> [-1 => -2] 0 -> ((-2))
   rC2C (#(-1))> [-1 => -2] 0 -> (#(-2))
   rS2S ((1))> [1 => 0] 2 -> ((0))
   rS2S (#(1))> [1 => 0] 2 -> (#(0))
   rS2S ((125))> [125 => 124] 126 -> ((124))
   rS2S (#(125))> [125 => 124] 126 -> (#(124))
   rS2S ((0))> [0 => -1] 1 -> ((-1))
   rS2S (#(0))> [0 => -1] 1 -> (#(-1))
   rS2S ((-125))> [-125 => -126] -124 -> ((-126))
   rS2S (#(-125))> [-125 => -126] -124 -> (#(-126))
   rS2S ((-1))> [-1 => -2] 0 -> ((-2))
   rS2S (#(-1))> [-1 => -2] 0 -> (#(-2))
   rI2I ((1))> [1 => 0] 2 -> ((0))
   rI2I (#(1))> [1 => 0] 2 -> (#(0))
   rI2I ((125))> [125 => 124] 126 -> ((124))
   rI2I (#(125))> [125 => 124] 126 -> (#(124))
   rI2I ((0))> [0 => -1] 1 -> ((-1))
   rI2I (#(0))> [0 => -1] 1 -> (#(-1))
   rI2I ((-125))> [-125 => -126] -124 -> ((-126))
   rI2I (#(-125))> [-125 => -126] -124 -> (#(-126))
   rI2I ((-1))> [-1 => -2] 0 -> ((-2))
   rI2I (#(-1))> [-1 => -2] 0 -> (#(-2))
   rL2L ((1))> [1 => 0] 2 -> ((0))
   rL2L (#(1))> [1 => 0] 2 -> (#(0))
   rL2L ((125))> [125 => 124] 126 -> ((124))
   rL2L (#(125))> [125 => 124] 126 -> (#(124))
   rL2L ((0))> [0 => -1] 1 -> ((-1))
   rL2L (#(0))> [0 => -1] 1 -> (#(-1))
   rL2L ((-125))> [-125 => -126] -124 -> ((-126))
   rL2L (#(-125))> [-125 => -126] -124 -> (#(-126))
   rL2L ((-1))> [-1 => -2] 0 -> ((-2))
   rL2L (#(-1))> [-1 => -2] 0 -> (#(-2))
   rQ2Q ((1))> [1 => 0] 2 -> ((0))
   rQ2Q (#(1))> [1 => 0] 2 -> (#(0))
   rQ2Q ((125))> [125 => 124] 126 -> ((124))
   rQ2Q (#(125))> [125 => 124] 126 -> (#(124))
   rQ2Q ((0))> [0 => -1] 1 -> ((-1))
   rQ2Q (#(0))> [0 => -1] 1 -> (#(-1))
   rQ2Q ((-125))> [-125 => -126] -124 -> ((-126))
   rQ2Q (#(-125))> [-125 => -126] -124 -> (#(-126))
   rQ2Q ((-1))> [-1 => -2] 0 -> ((-2))
   rQ2Q (#(-1))> [-1 => -2] 0 -> (#(-2))
   rf2f ((0))> [0.000000 => -1.000000] 1.0 -> ((-1))
   rf2f ((0.0))> [0.000000 => -1.000000] 1.0 -> ((-1.0))
   rf2f ((125.125))> [125.125000 => 124.125000] 126.125 -> ((124.125))
   rf2f ((-125.125))> [-125.125000 => -126.125000] -124.125 -> ((-126.125))
   rd2d ((0))> [0.000000 => -1.000000] 1.0 -> ((-1))
   rd2d ((0.0))> [0.000000 => -1.000000] 1.0 -> ((-1.0))
   rd2d ((125.125))> [125.125000 => 124.125000] 126.125 -> ((124.125))
   rd2d ((-125.125))> [-125.125000 => -126.125000] -124.125 -> ((-126.125))
16 integer arguments test:
   cccccccccccccccc2c (0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15)> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 => 120] 120
   cccccccccccccccc2c (15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0)> [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 => 120] 120
   ssssssssssssssss2s (0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15)> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 => 120] 120
   ssssssssssssssss2s (15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0)> [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 => 120] 120
   iiiiiiiiiiiiiiii2i (0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15)> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 => 120] 120
   iiiiiiiiiiiiiiii2i (15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0)> [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 => 120] 120
   llllllllllllllll2l (0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15)> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 => 120] 120
   llllllllllllllll2l (15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0)> [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 => 120] 120
   qqqqqqqqqqqqqqqq2q (0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15)> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 => 120] 120
   qqqqqqqqqqqqqqqq2q (15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0)> [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 => 120] 120
   CCCCCCCCCCCCCCCC2C (0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15)> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 => 120] 120
   CCCCCCCCCCCCCCCC2C (15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0)> [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 => 120] 120
   CCCCCCCCCCCCCCCC2C (0 -1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 -14 -15)> [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15 => -120] -120
   CCCCCCCCCCCCCCCC2C (-15 -14 -13 -12 -11 -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0)> [-15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0 => -120] -120
   SSSSSSSSSSSSSSSS2S (0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15)> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 => 120] 120
   SSSSSSSSSSSSSSSS2S (15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0)> [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 => 120] 120
   SSSSSSSSSSSSSSSS2S (0 -1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 -14 -15)> [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15 => -120] -120
   SSSSSSSSSSSSSSSS2S (-15 -14 -13 -12 -11 -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0)> [-15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0 => -120] -120
   IIIIIIIIIIIIIIII2I (0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15)> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 => 120] 120
   IIIIIIIIIIIIIIII2I (15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0)> [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 => 120] 120
   IIIIIIIIIIIIIIII2I (0 -1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 -14 -15)> [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15 => -120] -120
   IIIIIIIIIIIIIIII2I (-15 -14 -13 -12 -11 -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0)> [-15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0 => -120] -120
   LLLLLLLLLLLLLLLL2L (0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15)> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 => 120] 120
   LLLLLLLLLLLLLLLL2L (15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0)> [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 => 120] 120
   LLLLLLLLLLLLLLLL2L (0 -1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 -14 -15)> [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15 => -120] -120
   LLLLLLLLLLLLLLLL2L (-15 -14 -13 -12 -11 -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0)> [-15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0 => -120] -120
   QQQQQQQQQQQQQQQQ2Q (0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15)> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 => 120] 120
   QQQQQQQQQQQQQQQQ2Q (15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0)> [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 => 120] 120
   QQQQQQQQQQQQQQQQ2Q (0 -1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 -14 -15)> [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15 => -120] -120
   QQQQQQQQQQQQQQQQ2Q (-15 -14 -13 -12 -11 -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0)> [-15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0 => -120] -120
16 floating point arguments test:
   16 floats (0 11/10 11/5 33/10 22/5 11/2 33/5 77/10 44/5 99/10 101/10 1111/100 303/25 1313/100 707/50 303/20)> [0.000000, 1.100000, 2.200000, 3.300000, 4.400000, 5.500000, 6.600000, 7.700000, 8.800000, 9.900000, 10.100000, 11.110000, 12.120000, 13.130000, 14.140000, 15.150000 => 125.250000] 125.25
   16 floats (303/20 707/50 1313/100 303/25 1111/100 101/10 99/10 44/5 77/10 33/5 11/2 22/5 33/10 11/5 11/10 0)> [15.150000, 14.140000, 13.130000, 12.120000, 11.110000, 10.100000, 9.900000, 8.800000, 7.700000, 6.600000, 5.500000, 4.400000, 3.300000, 2.200000, 1.100000, 0.000000 => 125.250000] 125.25
   16 floats (0.0 1.1 2.2 3.29999999 4.4 5.5 6.59999999 7.7 8.8 9.9 10.09999999 11.1099999 12.1199999 13.13 14.14 15.15)> [0.000000, 1.100000, 2.200000, 3.300000, 4.400000, 5.500000, 6.600000, 7.700000, 8.800000, 9.900000, 10.100000, 11.110000, 12.120000, 13.130000, 14.140000, 15.150000 => 125.250000] 125.25
12 mixed type variables test:
   12 arguments (0 1 2 3 4 5 6 7 8 9 9877/8 493825/4)> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1234.625000, 123456.250000 => 124735.875000] 124735.875
22 mixed type variables test:
   22 integer arguments (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22)> [1, 2, 3.000000, 4.000000, 5, 6, 7.000000, 8.000000, 9, 10, 11.000000, 12.000000, 13, 14, 15.000000, 16.000000, 17, 18, 19.000000, 20.000000, 21.000000, 22.000000 => 253.000000] 253.0
   22 mixed arguments (1 2 3 9/2 5 6 29/4 35/4 9 10 89/8 103/8 13 14 255/16 267/16 17 18 631/32 671/32 701/32 183/8)> [1, 2, 3.000000, 4.500000, 5, 6, 7.250000, 8.750000, 9, 10, 11.125000, 12.875000, 13, 14, 15.937500, 16.687500, 17, 18, 19.718750, 20.968750, 21.906250, 22.875000 => 260.593750] 260.59375
   22 mixed inexact arguments (1 2 3.0 4.5 5 6 7.25 8.75 9 10 11.125 12.875 13 14 15.9375 16.6875 17 18 19.71875 20.96875 21.90625 22.875)> [1, 2, 3.000000, 4.500000, 5, 6, 7.250000, 8.750000, 9, 10, 11.125000, 12.875000, 13, 14, 15.937500, 16.687500, 17, 18, 19.718750, 20.968750, 21.906250, 22.875000 => 260.593750] 260.59375
too much arguments (8 needed, 32 declared):
   32 arguments (1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8)> [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8 => 72] 72
   128 arguments (1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8)> [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8 => 72] 72

reverse_string(hello): olleh - ok. 
reverse_string_wide(hello): olleh - ok. 
reverse_string(привет): тевирп - ok. 
reverse_string_wide(привет): тевирп - ok. 
reverse_string(Совы (Strigiformes) суть релатівно чісленым рядом класы птахів обсягуюча веце як 200 видів.): .відив 002 кя ецев ачюугясбо віхатп ысалк модяр мынелсіч онвіталер ьтус )semrofigirtS( ывоС - ok. 
reverse_string_wide(Совы (Strigiformes) суть релатівно чісленым рядом класы птахів обсягуюча веце як 200 видів.): .відив 002 кя ецев ачюугясбо віхатп ысалк модяр мынелсіч онвіталер ьтус )semrofigirtS( ывоС - ok. 
reverse_string(ბუსნაირნი (ლათ. Strigiformes) — ფრინველთა რიგი. ფართოდაა გავრცელებული მსოფლიოში (ანტარქტიკული და ზოგიერთი ოკეანური კუნძულის გამოკლებით).): .)თიბელკომაგ სილუძნუკ ირუნაეკო ითრეიგოზ ად ილუკიტქრატნა( იშოილფოსმ ილუბელეცრვაგ აადოთრაფ .იგირ ათლევნირფ — )semrofigirtS .თალ( ინრიანსუბ - ok. 
reverse_string_wide(ბუსნაირნი (ლათ. Strigiformes) — ფრინველთა რიგი. ფართოდაა გავრცელებული მსოფლიოში (ანტარქტიკული და ზოგიერთი ოკეანური კუნძულის გამოკლებით).): .)თიბელკომაგ სილუძნუკ ირუნაეკო ითრეიგოზ ად ილუკიტქრატნა( იშოილფოსმ ილუბელეცრვაგ აადოთრაფ .იგირ ათლევნირფ — )semrofigirtS .თალ( ინრიანსუბ - ok. 
reverse_string(フクロウ目（フクロウもく、梟目、学名 Strigiformes）は鳥類の1目である。): 。るあで目1の類鳥は）semrofigirtS 名学、目梟、くもウロクフ（目ウロクフ - ok. 
reverse_string_wide(フクロウ目（フクロウもく、梟目、学名 Strigiformes）は鳥類の1目である。): 。るあで目1の類鳥は）semrofigirtS 名学、目梟、くもウロクフ（目ウロクフ - ok. 

struct args_t
{
	int argc;
	struct {
		char** argv;
	} x;
	char c;
};
 args -> {
   argc = 3
   x = {
     argv[0] = only
     argv[1] = three
     argv[2] = arguments
   }
   c = C
 }
 args -> {
   argc = 6
   x = {
     argv[0] = a
     argv[1] = lot
     argv[2] = of
     argv[3] = аргументов
     argv[4] = including
     argv[5] = very-very-very-very-very-very-very-very-long-argument
   }
   c = C
 }
simple fft-any > type test:
   c2c (1): [1 => 1] 1
   s2s (1): [1 => 1] 1
   i2i (1): [1 => 1] 1
   l2l (1): [1 => 1] 1
   q2q (1): [1 => 1] 1
   C2C (1): [1 => 1] 1
   C2C (-1): [-1 => -1] -1
   S2S (1): [1 => 1] 1
   S2S (-1): [-1 => -1] -1
   I2I (1): [1 => 1] 1
   I2I (-1): [-1 => -1] -1
   L2L (1): [1 => 1] 1
   L2L (-1): [-1 => -1] -1
   Q2Q (1): [1 => 1] 1
   Q2Q (-1): [-1 => -1] -1
   float (125.125): [125.125000 => 125.125000] 125.125
   float (-125.125): [-125.125000 => -125.125000] -125.125
   double (125.125): [125.125000 => 125.125000] 125.125
   double (-125.125): [-125.125000 => -125.125000] -125.125
simple fft-any (fft*)) > type test:
   pc2c ((1)): [1 => 1] 1
   ps2s ((1)): [1 => 1] 1
   pi2i ((1)): [1 => 1] 1
   pl2l ((1)): [1 => 1] 1
   pq2q ((1)): [1 => 1] 1
   pC2C ((1)): [1 => 1] 1
   pC2C ((-1)): [-1 => -1] -1
   pS2S ((1)): [1 => 1] 1
   pS2S ((-1)): [-1 => -1] -1
   pI2I ((1)): [1 => 1] 1
   pI2I ((-1)): [-1 => -1] -1
   pL2L ((1)): [1 => 1] 1
   pL2L ((-1)): [-1 => -1] -1
   pQ2Q ((1)): [1 => 1] 1
   pQ2Q ((-1)): [-1 => -1] -1
   rf2f ((125.125)): [125.125000 => 124.125000] 126.125
   rf2f ((-125.125)): [-125.125000 => -126.125000] -124.125
   rd2d ((125.125)): [125.125000 => 124.125000] 126.125
   rd2d ((-125.125)): [-125.125000 => -126.125000] -124.125
extended fft-any (fft&)) > type test:
   rpc2c3 ((1 2 0)): [1, 2, 0 => 3] 3 -> (1 2 3)
   rpc2c3 (#(1 2 0)): [1, 2, 0 => 3] 3 -> #(1 2 3)
   rpc2c3 ((125 7 0)): [125, 7, 0 => 132] 132 -> (125 7 132)
   rpc2c3 (#(125 7 0)): [125, 7, 0 => 132] 132 -> #(125 7 132)
   rpc2c3 ((7 125 0)): [7, 125, 0 => 132] 132 -> (7 125 132)
   rpc2c3 (#(7 125 0)): [7, 125, 0 => 132] 132 -> #(7 125 132)
   rps2s3 ((1 2 0)): [1, 2, 0 => 3] 3 -> (1 2 3)
   rps2s3 (#(1 2 0)): [1, 2, 0 => 3] 3 -> #(1 2 3)
   rps2s3 ((125 7 0)): [125, 7, 0 => 132] 132 -> (125 7 132)
   rps2s3 (#(125 7 0)): [125, 7, 0 => 132] 132 -> #(125 7 132)
   rps2s3 ((7 125 0)): [7, 125, 0 => 132] 132 -> (7 125 132)
   rps2s3 (#(7 125 0)): [7, 125, 0 => 132] 132 -> #(7 125 132)
   rpi2i3 ((1 2 0)): [1, 2, 0 => 3] 3 -> (1 2 3)
   rpi2i3 (#(1 2 0)): [1, 2, 0 => 3] 3 -> #(1 2 3)
   rpi2i3 ((125 7 0)): [125, 7, 0 => 132] 132 -> (125 7 132)
   rpi2i3 (#(125 7 0)): [125, 7, 0 => 132] 132 -> #(125 7 132)
   rpi2i3 ((7 125 0)): [7, 125, 0 => 132] 132 -> (7 125 132)
   rpi2i3 (#(7 125 0)): [7, 125, 0 => 132] 132 -> #(7 125 132)
   rpC2C3 ((1 2 0)): [1, 2, 0 => 3] 3 -> (1 2 3)
   rpC2C3 (#(1 2 0)): [1, 2, 0 => 3] 3 -> #(1 2 3)
   rpC2C3 ((125 7 0)): [125, 7, 0 => -124] 132 -> (125 7 132)
   rpC2C3 (#(125 7 0)): [125, 7, 0 => -124] 132 -> #(125 7 132)
   rpC2C3 ((7 125 0)): [7, 125, 0 => -124] 132 -> (7 125 132)
   rpC2C3 (#(7 125 0)): [7, 125, 0 => -124] 132 -> #(7 125 132)
   rpS2S3 ((1 2 0)): [1, 2, 0 => 3] 3 -> (1 2 3)
   rpS2S3 (#(1 2 0)): [1, 2, 0 => 3] 3 -> #(1 2 3)
   rpS2S3 ((125 7 0)): [125, 7, 0 => 132] 132 -> (125 7 132)
   rpS2S3 (#(125 7 0)): [125, 7, 0 => 132] 132 -> #(125 7 132)
   rpS2S3 ((7 125 0)): [7, 125, 0 => 132] 132 -> (7 125 132)
   rpS2S3 (#(7 125 0)): [7, 125, 0 => 132] 132 -> #(7 125 132)
   rpI2I3 ((1 2 0)): [1, 2, 0 => 3] 3 -> (1 2 3)
   rpI2I3 (#(1 2 0)): [1, 2, 0 => 3] 3 -> #(1 2 3)
   rpI2I3 ((125 7 0)): [125, 7, 0 => 132] 132 -> (125 7 132)
   rpI2I3 (#(125 7 0)): [125, 7, 0 => 132] 132 -> #(125 7 132)
   rpI2I3 ((7 125 0)): [7, 125, 0 => 132] 132 -> (7 125 132)
   rpI2I3 (#(7 125 0)): [7, 125, 0 => 132] 132 -> #(7 125 132)
   rpf2f3 ((1.0 2.0 0.0)): [1.000000, 2.000000, 0.000000 => 3.000000] 3.0 -> (1.0 2.0 3.0)
   rpf2f3 (#(1.0 2.0 0.0)): [1.000000, 2.000000, 0.000000 => 3.000000] 3.0 -> #(1.0 2.0 3.0)
   rpf2f3 ((125.125 7.0 0.0)): [125.125000, 7.000000, 0.000000 => 132.125000] 132.125 -> (125.125 7.0 132.125)
   rpf2f3 (#(125.125 7.0 0.0)): [125.125000, 7.000000, 0.000000 => 132.125000] 132.125 -> #(125.125 7.0 132.125)
   rpf2f3 ((7.0 125.125 0.0)): [7.000000, 125.125000, 0.000000 => 132.125000] 132.125 -> (7.0 125.125 132.125)
   rpf2f3 (#(7.0 125.125 0.0)): [7.000000, 125.125000, 0.000000 => 132.125000] 132.125 -> #(7.0 125.125 132.125)
   rpf2f3 ((-125.125 -125.125 0.0)): [-125.125000, -125.125000, 0.000000 => -250.250000] -250.25 -> (-125.125 -125.125 -250.25)
   rpf2f3 (#(-125.125 -125.125 0.0)): [-125.125000, -125.125000, 0.000000 => -250.250000] -250.25 -> #(-125.125 -125.125 -250.25)
   rpf2f3 ((125.125 -125.125 0.0)): [125.125000, -125.125000, 0.000000 => 0.000000] 0.0 -> (125.125 -125.125 0.0)
   rpf2f3 (#(125.125 -125.125 0.0)): [125.125000, -125.125000, 0.000000 => 0.000000] 0.0 -> #(125.125 -125.125 0.0)
   rpd2d3 ((1.0 2.0 0.0)): [1.000000, 2.000000, 0.000000 => 3.000000] 3.0 -> (1.0 2.0 3.0)
   rpd2d3 (#(1.0 2.0 0.0)): [1.000000, 2.000000, 0.000000 => 3.000000] 3.0 -> #(1.0 2.0 3.0)
   rpd2d3 ((125.125 7.0 0.0)): [125.125000, 7.000000, 0.000000 => 132.125000] 132.125 -> (125.125 7.0 132.125)
   rpd2d3 (#(125.125 7.0 0.0)): [125.125000, 7.000000, 0.000000 => 132.125000] 132.125 -> #(125.125 7.0 132.125)
   rpd2d3 ((7.0 125.125 0.0)): [7.000000, 125.125000, 0.000000 => 132.125000] 132.125 -> (7.0 125.125 132.125)
   rpd2d3 (#(7.0 125.125 0.0)): [7.000000, 125.125000, 0.000000 => 132.125000] 132.125 -> #(7.0 125.125 132.125)
   rpd2d3 ((-125.125 -125.125 0.0)): [-125.125000, -125.125000, 0.000000 => -250.250000] -250.25 -> (-125.125 -125.125 -250.25)
   rpd2d3 (#(-125.125 -125.125 0.0)): [-125.125000, -125.125000, 0.000000 => -250.250000] -250.25 -> #(-125.125 -125.125 -250.25)
   rpd2d3 ((125.125 -125.125 0.0)): [125.125000, -125.125000, 0.000000 => 0.000000] 0.0 -> (125.125 -125.125 0.0)
   rpd2d3 (#(125.125 -125.125 0.0)): [125.125000, -125.125000, 0.000000 => 0.000000] 0.0 -> #(125.125 -125.125 0.0)
[42 43.340000 44 45.540000]
done.
